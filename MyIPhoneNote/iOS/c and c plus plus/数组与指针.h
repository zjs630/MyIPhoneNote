第7章 数组
1，一维数组定义
	int a[10];//定义了一个整型数组，数组名为a，有10个元素。
2，数组的引用,通过数组名加下标表示，如：a[0];//表示数组中的第一个元素。
3，初始化
	int a[10] = {0,1,2,3,4};//还可以部分赋值，还可以不指定数组长度。
4，二维数组定义及初始化
	int a[2][3] ＝ {{1,2,3},{4,5,6}} ;
5, 字符数组的初始化
	char c[] = {'j','i','n','g',' ','s','h','u','n'};//若不指定长度，系统会根据初值个数自动确定数组的长度
	NSLog(@"lengdth:%d",sizeof(c));//lengdth:9
6，字符串和字符串结束标记
	在c语言中，是将字符串作为字符数组来处理的。所以还可以用字符串的方式来初始化字符数组。
	char c[] = {"jing shun"};//大括号可以去掉。
	char c[] = "jing shun"; //此字符串的数组长度是10，是由于系统对字符串常量自动加了一个‘\0’,只是字符串的一个结束标记。
	NSLog(@"lengdth:%d",sizeof(c));//lengdth:10
	NSLog(@"lengdth:%d",strlen(c));//lengdth:9
	还可以用字符指针指向一个字符串
	char *str = "jing shun";//把字符串第一个元素的地址赋给str。
7,字符数组的输入输出
	输出单个字符用%c,输出整个字符串用%s。








1，所谓数组元素的指针就是数组元素的地址。引用数组元素可以用下标法，也可以用指针法，即通过指向数组元素的指针找到所需的元素。
2，定义一个指向数组元素的指针
	int a[10]; //定义了一个整型数组，包含十个整型数据。
	int *p; //定义了一个指向整型变量的指针。
	//对指针变量赋值，方式①等价于方式②
	①p = &a[0]; //将数组元素的首地址赋给指针变量p。
	②p = a; //因数组名代表数组中第一个元素的地址。
	//在定义指针变量的时候赋初值
	int *p = &a[0]; 或者 int *p; p =&a[0]; 或者 int *p = a;
3，当用数组名作参数时，如果型参数组中各元素的值发生变化，实参数组元素的值随之变化。
4,若定义了一个指针变量，并使它指向一个字符串A，就可以用下标法形式引用字符串A中的字符。
	char *a = "adsf";
	for(int i=0;a[i]!='\0';i++)
	printf("%c",a[i]);