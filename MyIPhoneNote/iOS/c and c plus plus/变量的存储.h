1,内存中供用户使用的存储空间（用户区），可以分为3部分。
	a，程序区
	//数据分别存放载b和c中。
	b，静态存储区//全局变量存放载静态存储区中，在程序开始执行时进行分配，占据固定的存储单元，程序执行完毕就释放。
	c，动态存储区//①存放函数的形式参数。②局部变量（没有加static声明）③函数调用时的现场保护和返回地址。
	注：静态的局部变量存放在静态存储区，是在编译时赋初值的，即只赋值一次。
	以后在调用寒暑是不再重新赋初值，而是保留上次函数调用结束时的值。
	静态的全局变量限制了变量的使用范围，存储方式不变。
2，register变量的值是存放在寄存器中的。
	c语言允许将局部变量的值存放在CPU中的寄存器中，需要时直接从寄存器取出参与运算，不必再到内存中去取。
	//实际上此变量不实用，了解即可。
3，用extern来扩展外部变量的作用域。
	①在同一个文件内使用
	如果外部变量不在文件的开头定义，其有效的作用范围只限于定义处到文件结尾。
	如果在定义点之前的函数想引用该外部变量，则应该在引用之前用关键字extern对该变量作“外部变量声明‘，
	表示该变量是一个已经定义的外部变量。如：
	max()
	{
		extern int a;//还可以省略变量类型，写成：extern a;
	}
	int a=13;
	②将作用域从一个文件扩展到其它文件
	   如果一个程序包含两个文件，在两个文件中都要用到同一个外部变量Num，不能分别在两个文件中格子定义一个外部变量Num，
	否则在进行程序连接的时候会出现“重复定义”的错误。
		正确的做法是：在任意一个文件中定义外部变量Num，而在另一个文件中用extern 对Num 作外部变量的声明。